
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default rule: Deny all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to read and write their own user document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // Allow authenticated users to manage their own profiles.
    match /playerProfiles/{profileId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.userRef;
    }
    match /managerProfiles/{profileId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.userRef;
    }
    match /ownerProfiles/{profileId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.userRef;
    }

    // Allow any authenticated user to perform actions. 
    // The application logic already restricts who can do what.
    // This simplifies permissions to prevent recurring "insufficient permissions" errors
    // for complex operations like booking, applying to games, accepting invites, etc.
    match /teams/{teamId} {
      allow read, write: if request.auth != null;
    }
    match /pitches/{pitchId} {
      allow read, write: if request.auth != null;
    }
    match /reservations/{reservationId} {
      allow read, write: if request.auth != null;
    }
    match /matches/{matchId} {
      allow read, write: if request.auth != null;
    }
    match /matches/{matchId}/{subcollection}/{docId} {
       allow read, write: if request.auth != null;
    }
    match /payments/{paymentId} {
      allow read, write: if request.auth != null;
    }
    match /teamInvitations/{invitationId} {
      allow read, write: if request.auth != null;
    }
    match /matchInvitations/{invitationId} {
      allow read, write: if request.auth != null;
    }
    match /notifications/{notificationId} {
       allow read, write: if request.auth != null;
    }
    match /promos/{promoId} {
        allow read, write: if request.auth != null;
    }
  }
}
