rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow any authenticated user to read any document.
    // This is safe for public profiles, game data, etc.
    // Write access will be restricted by more specific rules below.
    match /{path=**}/documents/{doc} {
        allow read: if isAuthenticated();
    }

    // Users can only update their own user document
    match /users/{userId} {
      allow write: if isOwner(userId);
    }
    
    // Profiles can only be written to by the owning user
    match /playerProfiles/{profileId} {
        allow write: if isOwner(request.resource.data.userRef);
    }
    
    match /managerProfiles/{profileId} {
        allow write: if isOwner(request.resource.data.userRef);
    }
    
    match /ownerProfiles/{profileId} {
        allow write: if isOwner(request.resource.data.userRef);
    }

    // Teams can only be written to by their manager
    match /teams/{teamId} {
      allow write: if isOwner(request.resource.data.managerId);
    }
    
    // Pitches and Promos can only be written to by their owner
    match /pitches/{pitchId} {
        allow write: if get(/databases/$(database)/documents/ownerProfiles/$(request.resource.data.ownerRef)).data.userRef == request.auth.uid;
    }

    match /promos/{promoId} {
       allow write: if get(/databases/$(database)/documents/ownerProfiles/$(request.resource.data.ownerProfileId)).data.userRef == request.auth.uid;
    }

    // Allow authenticated users to manage their own reservations, invitations, and notifications
    match /reservations/{reservationId} {
        allow write: if isOwner(request.resource.data.actorId);
    }

    match /teamInvitations/{invitationId} {
        allow write: if isOwner(request.resource.data.playerId) || isOwner(request.resource.data.managerId);
    }

    match /matchInvitations/{invitationId} {
        allow write: if isOwner(request.resource.data.playerId) || isOwner(request.resource.data.managerId);
    }
    
    match /notifications/{notificationId} {
        allow write: if isAuthenticated();
    }
    
    // Matches can be updated by the manager who created it
    match /matches/{matchId} {
        allow write: if isOwner(request.resource.data.managerRef);
    }
    
     match /matches/{matchId}/mvpVotes/{voteId} {
      allow write: if isOwner(request.resource.data.voterId);
    }

    // Payments can be written by the user they belong to
    match /payments/{paymentId} {
        allow write: if isOwner(request.resource.data.playerRef) || isOwner(request.resource.data.managerRef);
    }
  }
}
