
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    function isProfileOwner(profileType, profileId) {
      return request.auth != null && exists(/databases/$(database)/documents/$(profileType)/$(profileId)) &&
             get(/databases/$(database)/documents/$(profileType)/$(profileId)).data.userRef == request.auth.uid;
    }

    match /users/{userId} {
      allow get: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if request.auth.uid == userId || isAdmin();
    }

    match /playerProfiles/{profileId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create, update, delete: if isProfileOwner('playerProfiles', profileId) || isAdmin();
    }

    match /managerProfiles/{profileId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create, update, delete: if isProfileOwner('managerProfiles', profileId) || isAdmin();
    }

    match /ownerProfiles/{profileId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create, update, delete: if isProfileOwner('ownerProfiles', profileId) || isAdmin();
    }
    
    match /teams/{teamId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create: if request.resource.data.managerId == request.auth.uid || isAdmin();
      allow update, delete: if get(/databases/$(database)/documents/teams/$(teamId)).data.managerId == request.auth.uid || isAdmin();
    }

    match /pitches/{pitchId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create, update, delete: if isProfileOwner('ownerProfiles', request.resource.data.ownerRef) || isAdmin();
    }

    match /reservations/{reservationId} {
      allow get: if isProfileOwner('ownerProfiles', get(/databases/$(database)/documents/reservations/$(reservationId)).data.ownerProfileId) || request.auth.uid == get(/databases/$(database)/documents/reservations/$(reservationId)).data.actorId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.actorId || isAdmin();
      allow update, delete: if isProfileOwner('ownerProfiles', get(/databases/$(database)/documents/reservations/$(reservationId)).data.ownerProfileId) || isAdmin();
    }
    
    match /matches/{matchId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create: if request.resource.data.managerRef == request.auth.uid || isAdmin();
      allow update, delete: if get(/databases/$(database)/documents/matches/$(matchId)).data.managerRef == request.auth.uid || isAdmin();
    }

    match /payments/{paymentId} {
      allow read, write, delete: if request.auth.uid == resource.data.playerRef || request.auth.uid == resource.data.managerRef || isProfileOwner('ownerProfiles', resource.data.ownerRef) || isAdmin();
    }

    match /teamInvitations/{invitationId} {
      allow get: if request.auth.uid == resource.data.playerId || request.auth.uid == resource.data.managerId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.managerId || isAdmin();
      allow update, delete: if request.auth.uid == resource.data.playerId || request.auth.uid == resource.data.managerId || isAdmin();
    }

    match /matchInvitations/{invitationId} {
      allow get: if request.auth.uid == resource.data.playerId || request.auth.uid == resource.data.managerId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.managerId || isAdmin();
      allow update, delete: if request.auth.uid == resource.data.playerId || request.auth.uid == resource.data.managerId || isAdmin();
    }
    
    match /users/{userId}/notifications/{notificationId} {
        allow read, write, delete: if request.auth.uid == userId || isAdmin();
    }
    
    match /promos/{promoId} {
      allow get: if request.auth != null || isAdmin();
      allow list: if isAdmin();
      allow create, update, delete: if isProfileOwner('ownerProfiles', request.resource.data.ownerProfileId) || isAdmin();
    }
    
    match /matches/{matchId}/mvpVotes/{voteId} {
      allow read, create: if request.auth != null && get(/databases/$(database)/documents/matches/$(matchId)).data.teamAPlayers.hasAny([request.auth.uid]) || get(/databases/$(database)/documents/matches/$(matchId)).data.teamBPlayers.hasAny([request.auth.uid]) || isAdmin();
      allow list: if isAdmin();
    }
  }
}
